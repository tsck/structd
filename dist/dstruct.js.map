{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 7609c536bb78cb5fd13b","webpack:///./src/dstruct.js","webpack:///./src/structures/stack/Stack.js","webpack:///./src/structures/queue/Queue.js","webpack:///./src/structures/linked-list/LinkedList.js","webpack:///./src/structures/linked-list/LinkedListNode.js","webpack:///./src/structures/hash-table/HashTable.js","webpack:///./src/structures/hash-table/HashCodes.js","webpack:///./src/structures/hash-table/ValuePair.js","webpack:///./src/structures/binary-search-tree/BinarySearchTree.js","webpack:///./src/structures/binary-search-tree/BSTNode.js","webpack:///./src/structures/graph/Graph.js"],"names":["dstruct","Stack","Queue","LinkedList","HashTable","BinarySearchTree","Graph","map","WeakMap","set","stack","get","toString","pop","element","push","length","splice","queue","shift","head","node","current","next","position","prevPosition","prevNode","nextNode","i","indexOf","removeAt","index","string","substring","LinkedListNode","table","key","undefined","value","append","remove","isEmpty","simpleHashCode","hash","charCodeAt","ValuePair","minNode","left","maxNode","right","searchNode","removeNode","tmp","inOrderTraverseNode","callback","preOrderTraverseNode","postOrderTraverseNode","insertNewNode","newNode","insertNode","root","call","BSTNode","_verticesMap","Map","_connectionsMap","v","vertex","vertArr","connections","disconnect","vertex1","vertex2","arr1","arr2","output","y","findIndex","color","enqueue","u","dequeue","neighbors","w","distances"],"mappings":"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","file":"dstruct.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"dstruct\"] = factory();\n\telse\n\t\troot[\"dstruct\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7609c536bb78cb5fd13b","import { Stack } from './structures/stack/Stack';\nimport { Queue } from './structures/queue/Queue';\nimport { LinkedList } from './structures/linked-list/LinkedList';\nimport { HashTable } from './structures/hash-table/HashTable';\nimport { BinarySearchTree } from './structures/binary-search-tree/BinarySearchTree';\nimport { Graph } from './structures/graph/Graph';\n\nvar dstruct = {\n  Stack             : Stack,\n  Queue             : Queue,\n  LinkedList        : LinkedList,\n  HashTable         : HashTable,\n  BinarySearchTree  : BinarySearchTree,\n  Graph             : Graph\n};\n\nexport { dstruct };\n\n\n\n// WEBPACK FOOTER //\n// ./src/dstruct.js","let map = new WeakMap();\n\nexport class Stack {\n  constructor() {\n    map.set(this, []);\n  }\n\n  toString() {\n    let stack = map.get(this);\n    return stack.toString();\n  }\n\n  pop() {\n    let stack = map.get(this);\n    return stack.pop();\n  }\n\n  push(element) {\n    let stack = map.get(this);\n    stack.push(element);\n  }\n\n  size() {\n    let stack = map.get(this);\n    return stack.length;\n  }\n\n  isEmpty() {\n    let stack = map.get(this);\n    return stack.length === 0;\n  }\n\n  clear() {\n    let stack = map.get(this);\n    stack.splice(0, stack.length);\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/structures/stack/Stack.js","let map = new WeakMap();\n\nexport class Queue {\n  constructor() {\n    map.set(this, []);\n  }\n\n  toString() {\n    let queue = map.get(this);\n    return queue.toString();\n  }\n\n  dequeue() {\n    let queue = map.get(this);\n    return queue.shift();\n  }\n\n  enqueue(element) {\n    let queue = map.get(this);\n    queue.push(element);\n  }\n\n  size() {\n    let queue = map.get(this);\n    return queue.length;\n  }\n\n  isEmpty() {\n    let queue = map.get(this);\n    return queue.length === 0;\n  }\n\n  front() {\n    let queue = map.get(this);\n    return queue[0];\n  }\n\n  clear() {\n    let queue = map.get(this);\n    queue.splice(0, queue.length);\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/structures/queue/Queue.js","import { LinkedListNode } from './LinkedListNode.js';\n\nexport class LinkedList {\n  constructor() {\n    this.length = 0;\n    this.head = null;\n  }\n\n  append(element) {\n    let\n      node = new LinkedListNode(element),\n      current;\n\n    // Check if this is 1st item in list\n    if (this.head === null) {\n      this.head = node;\n    } else {\n      current = this.head;\n\n      // Loop to last node in list\n      while (current.next) {\n        current = current.next;\n      }\n\n      current.next = node;\n    }\n\n    this.length++;\n  }\n\n  insert(position, element) {\n    let\n      node = new LinkedListNode(element),\n      prevPosition = position - 1,\n      prevNode = this.head,\n      nextNode;\n\n      // Get previous element\n      for (let i = 0; i < prevPosition; i++) {\n        prevNode = prevNode.next;\n      }\n\n      nextNode = prevNode.next;\n      prevNode.next = node;\n      node.next = nextNode;\n  }\n\n  removeAt(position) {\n    if (position > -1 && position < this.length && this.head != null) {\n      let\n        prevPosition = position - 1,\n        current = this.head;\n\n      if (position === 0) {\n        this.head = current.next;\n      } else {\n        // Get previous element\n        for (let i = 0; i < prevPosition; i++) {\n          current = current.next;\n        }\n\n        // Assign previous elements next to the element after the element being\n        // replaced\n        current.next = current.next.next;\n      }\n    }\n  }\n\n  remove(element) {\n    let position = this.indexOf(element);\n    this.removeAt(position);\n  }\n\n  indexOf(element) {\n    let\n      index = 0,\n      current;\n\n    if (this.head) {\n      current = this.head;\n      while (current) {\n        if (current.element === element) return index;\n        index++;\n        current = current.next;\n      }\n    }\n\n    // Will only be reached if element not found in list\n    return -1;\n  }\n\n  isEmpty() {\n    return this.length === 0;\n  }\n\n  size() {\n    return this.length;\n  }\n\n  toString() {\n    let\n      current = this.head,\n      string = '';\n\n    while(current) {\n      string += current.element + ', ';\n      current = current.next;\n    }\n\n    // Remove trailing space and comma\n    string = string.substring(0, string.length - 2);\n\n    return string;\n  }\n\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/structures/linked-list/LinkedList.js","export class LinkedListNode {\n  constructor(element) {\n    this.element = element;\n    this.next = null;\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/structures/linked-list/LinkedListNode.js","import { simpleHashCode } from './HashCodes.js';\nimport { ValuePair } from './ValuePair.js';\nimport { LinkedList } from '../linked-list/LinkedList.js';\n\nexport class HashTable {\n  constructor() {\n    this.table = [];\n  }\n\n  get(key) {\n    let position = simpleHashCode(key);\n\n    if (this.table[position] !== undefined) {\n      let current = this.table[position].head;\n\n      // loop from 1st element through to n minus 1th element\n      while (current.next) {\n        if (current.element.key === key) {\n          return current.element.value;\n        } else {\n          current = current.next;\n        }\n      }\n\n      // check last element\n      if (current.element.key === key) {\n        return current.element.value;\n      }\n    }\n    return undefined;\n  }\n\n  put(key, value) {\n    let position = simpleHashCode(key);\n\n    if (this.table[position] === undefined) {\n      this.table[position] = new LinkedList();\n    }\n\n    this.table[position].append(new ValuePair(key, value));\n  }\n\n  remove(key) {\n    let position = simpleHashCode(key);\n\n    if (this.table[position] !== undefined) {\n      let current = this.table[position].head;\n\n      // loop from 1st element through to n minus 1th element\n      while (current.next) {\n        if (current.element.key === key) {\n          this.table[position].remove(current.element);\n          if (this.table[position].isEmpty()) {\n            this.table[position] = undefined;\n          }\n          return true;\n        } else {\n          current = current.next;\n        }\n      }\n\n      // check last element\n      if (current.element.key === key) {\n        this.table[position].remove(current.element);\n        if (this.table[position].isEmpty()) {\n          this.table[position] = undefined;\n        }\n        return true;\n      }\n    }\n    return false;\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/structures/hash-table/HashTable.js","export function simpleHashCode(key) {\n  let hash = 0;\n  for (let i = 0; i < key.length; i++) {\n    hash += key.charCodeAt(i);\n  }\n  return hash % 37;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/structures/hash-table/HashCodes.js","export class ValuePair {\n  constructor(key, value) {\n    this.key = key;\n    this.value = value;\n  }\n\n  toString() {\n    return `[${this.key} - ${this.value}]`;\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/structures/hash-table/ValuePair.js","import { BSTNode } from './BSTNode.js';\n\n// --------------------------------------------------------------------\n// Private Methods\n// --------------------------------------------------------------------\n\nfunction minNode(node) {\n    if (node && node.left !== null) {\n        return minNode(node.left);\n    } else {\n        return node.key;\n    }\n}\n\nfunction maxNode(node) {\n    if (node && node.right !== null) {\n        return maxNode(node.right);\n    } else {\n        return node.key;\n    }\n}\n\nfunction searchNode(node, key) {\n    if (node === null) {\n        return false;\n    }\n\n    if (node.key === key) {\n        return true;\n    }\n\n    if (key < node.key) {\n        return searchNode(node.left, key);\n    } else {\n        return searchNode(node.right, key);\n    }\n}\n\n// Method remove the node with matching key from the tree and returns it\nfunction removeNode(node, key) {\n    // make sure node exists\n    if (node === null) {\n        return null;\n    }\n\n    // If the current node's key is not the correct key, remove it and return it\n    if (key === node.key) {\n\n        // Case 1: The node is a leaf node\n        if (node.left === null && node.right === null) {\n            node = null;\n            return node;\n        }\n\n        // Case 2: The node only has a right child\n        if (node.left === null) {\n            node = node.right;\n            return node;\n        }\n\n        // Case 3: The node only has a left child\n        if (node.right === null) {\n            node = node.left;\n            return node;\n        }\n\n        // Case 4: The node as 2 children\n        let tmp = minNode(node.right);\n        node.key = tmp.key;\n        node.right = removeNode(node.right, tmp.key);\n        return node;\n    }\n\n    // If the current node's key is not the correct key, find the right node by\n    // traversing down either the left branch or right branch recursively\n    if (key < node.key) {\n        node.left = removeNode(node.left, key);\n        return node;\n    } else if (key > node.key) {\n        node.right = removeNode(node.right, key);\n        return node;\n    }\n}\n\nfunction inOrderTraverseNode(node, callback) {\n    if (node !== null) {\n        inOrderTraverseNode(node.left, callback);\n        callback(node.key);\n        inOrderTraverseNode(node.right, callback);\n    }\n}\n\nfunction preOrderTraverseNode(node, callback) {\n    if (node !== null) {\n        callback(node.key);\n        preOrderTraverseNode(node.left, callback);\n        preOrderTraverseNode(node.right, callback);\n    }\n}\n\nfunction postOrderTraverseNode(node, callback) {\n    if (node !== null) {\n        postOrderTraverseNode(node.left, callback);\n        postOrderTraverseNode(node.right, callback);\n        callback(node.key);\n    }\n}\n\nfunction insertNewNode(node, newNode) {\n    if (newNode.key < node.key) {\n        if (node.left === null) {\n            node.left = newNode;\n        } else {\n            insertNode(node.left, newNode);\n        }\n    } else {\n        if (node.right === null) {\n            node.right = newNode;\n        } else {\n            insertNewNode(node.right, newNode);\n        }\n    }\n}\n\nexport class BinarySearchTree {\n    constructor() {\n        this.root = null;\n    }\n\n    insert(key) {\n        let node = new BSTNode(key);\n        if (this.root === null) {\n            this.root = node;\n        } else {\n            insertNewNode.call(this, this.root, node);\n        }\n    }\n\n    search(key) {\n        return searchNode.call(this, this.root, key);\n    }\n\n    inOrderTraverse(callback) {\n        inOrderTraverseNode.call(this, this.root, callback);\n    }\n\n    preOrderTraverse(callback) {\n        preOrderTraverseNode.call(this, this.root, callback);\n    }\n\n    postOrderTraverse(callback) {\n        postOrderTraverseNode.call(this, this.root, callback);\n    }\n\n    min() {\n        return minNode.call(this, this.root);\n    }\n\n    max() {\n        return maxNode.call(this, this.root);\n    }\n\n    remove(key) {\n        return removeNode.call(this, this.root, key);\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/structures/binary-search-tree/BinarySearchTree.js","export class BSTNode {\n    constructor(key) {\n        this.key = key;\n        this.left = null;\n        this.right = null;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/structures/binary-search-tree/BSTNode.js","import { Queue } from '../queue/Queue';\n\nlet _verticesMap = new Map();\nlet _connectionsMap = new Map();\n\nexport class Graph {\n    constructor() {\n        _verticesMap.set(this, []);\n        _connectionsMap.set(this, new Map());\n    }\n\n    add(v) {\n        _verticesMap.get(this).push(v);\n        _connectionsMap.get(this).set(v, []);\n    }\n\n    remove(vertex) {\n        let vertArr = _verticesMap.get(this);\n        vertArr.splice(vertArr.indexOf(vertex), 1);\n\n        let connections = _connectionsMap.get(this).get(vertex);\n        for (let i = 0; i < connections.length; i++) {\n            this.disconnect(vertex, connections[i]);\n        }\n    }\n\n    connect(vertex1, vertex2) {\n        _connectionsMap.get(this).get(vertex1).push(vertex2);\n        _connectionsMap.get(this).get(vertex2).push(vertex1);\n    }\n\n    disconnect(vertex1, vertex2) {\n        let arr1 = _connectionsMap.get(this).get(vertex1);\n        arr1.splice(arr1.indexOf(vertex2), 1);\n\n        let arr2 = _connectionsMap.get(this).get(vertex2);\n        arr2.splice(arr2.indexOf(vertex1), 1);\n    }\n\n    isEmpty() {\n        return _verticesMap.get(this).length === 0;\n    }\n\n    toString() {\n        let output = '';\n\n        for (let i = 0; i < _verticesMap.get(this).length; i++) {\n            output += `${_verticesMap.get(this)[i]} ->`;\n            let connections = _connectionsMap.get(this).get(_verticesMap.get(this)[i]);\n            for (let y = 0; y < connections.length; y++) {\n                output += ` ${connections[y]}`;\n            }\n            output += '\\n';\n        }\n\n        return output;\n    }\n\n    clear() {\n        _verticesMap.set(this, []);\n        _connectionsMap.set(this, new Map());\n    }\n\n    size() {\n        return _verticesMap.get(this).length;\n    }\n\n    contains(vertex) {\n        let index = _verticesMap.get(this).findIndex((element) => {\n            return  element === vertex;\n        });\n\n        return index >= 0 ? true : false;\n    }\n\n    getVerticesConnectedTo(vertex) {\n        return _connectionsMap.get(this).get(vertex);\n    }\n\n    getAllVertices() {\n        return _verticesMap.get(this);\n    }\n\n    forEach(callback) {\n        let\n            color = [],\n            queue = new Queue();\n\n        // Enqueue the point of origin\n        queue.enqueue(_verticesMap.get(this)[0]);\n\n        // Initialize colors\n        for (let i = 0; i < _verticesMap.get(this).length; i++) {\n            color[_verticesMap.get(this)[i]] = 'white';\n        }\n\n        while (!queue.isEmpty()) {\n            let u         = queue.dequeue(),\n                neighbors = _connectionsMap.get(this).get(u);\n\n            // mark vertex u as visited\n            color[u] = 'grey';\n\n            // for each neighbor of vertex u, if unvisited, visit, add to queue and mark as visited\n            for (let i = 0; i < neighbors.length; i++) {\n                let w = neighbors[i];\n                if (color[w] === 'white') {\n                    color[w] = 'grey';\n                    queue.enqueue(w);\n                }\n            }\n\n            // mark vertex u as discovered\n            color[u] = 'black';\n\n            // execute callback on vertex u\n            if (callback) {\n                callback(u);\n            }\n        }\n    }\n\n    getDistancesFrom(vertex) {\n        let color = [],\n            queue = new Queue(),\n            distances = {};\n\n        queue.enqueue(vertex);\n\n        // Initialize colors\n        for (let i = 0; i < _verticesMap.get(this).length; i++) {\n            color[_verticesMap.get(this)[i]] = 'white';\n        }\n\n        for (let i = 0; i < _verticesMap.get(this).length; i++) {\n            distances[_verticesMap.get(this)[i]] = 0;\n        }\n\n        while (!queue.isEmpty()) {\n            let u         = queue.dequeue(),\n                neighbors = _connectionsMap.get(this).get(u);\n\n            color[u] = 'grey';\n            for (let i = 0; i < neighbors.length; i++) {\n                let w = neighbors[i];\n                if (color[w] === 'white') {\n                    color[w] = 'grey';\n                    distances[w] = distances[u] + 1;\n                    queue.enqueue(w);\n                }\n            }\n\n            color[u] = 'black';\n        }\n        return distances;\n    }\n};\n\n\n// WEBPACK FOOTER //\n// ./src/structures/graph/Graph.js"],"sourceRoot":""}